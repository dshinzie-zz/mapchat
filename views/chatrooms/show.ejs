<!DOCTYPE html>
<html ng-app="mapChat">
  <head>
    <meta charset="utf-8">
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <script src="/js/jquery.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <meta charset="utf-8">
    <title></title>
  </head>
  <body >
    <% include ../shared/navbar %>

    <div class="col-md-7">
      <div id="map" style="width:700px; height:700px;"></div>
    </div>

    <div class="col-md-5">
      <ul id="messages"></ul>
      <form class="chatroom" action="">
        <input type="text" placeholder="Address:" id="address" >

        <input type="text" placeholder="Send Message:" id="m" autocomplete="off"/><button>Send</button>
      </form>
    </div>

  </body>
</html>

<script src="https://map-n-chat.herokuapp.com/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-1.11.1.js"></script>
<script>
  var roomName = window.location.pathname.split("/")[2];
  var socket = io("/" + roomName);
  var currentUser = <%- JSON.stringify(thisUser) %>;

  socket.on('connect', function(){
    console.log("Connecting to server for room: " + roomName);
    $('#messages').append($('<li>').text(currentUser + " connected to room: " + roomName));
  });

  $('form').submit(function(){
    //send message to server
    socket.emit('send message', $('#m').val());
    console.log("Message sent to server: " + $('#m').val());
    $('#m').val('');
    return false
  });

  socket.on('send message', function(msg){
    var line = `${currentUser}: ${msg}`;
    $('#messages').append($('<li>').text(line));
  });

  socket.on('send location', function(msg){
    var line = `${currentUser} placed a point at: ${msg}`;
    var routeButton = $("<button class='route-button'/>").text('Route Location');
    $('#messages').append($("<li class='location-li'>").text(line).append(routeButton));

    setNewIds();

    var id = $('.location-li').length;

    document.getElementById('route-button-' + id).addEventListener('click', function() {
      var waypts = [];
      //message way point
      waypts.push({ location: new google.maps.LatLng(msg.split(",")[0], msg.split(",")[1]), stopover: true });
      //current location
      waypts.push({ location: new google.maps.LatLng(window.currentPosition["lat"], window.currentPosition["lng"]), stopover: true });

      calculateAndDisplayRoute(window.directionsService, window.directionsDisplay, waypts);
     });
  });

  function initMap() {
     window.directionsService = new google.maps.DirectionsService;
     window.directionsDisplay = new google.maps.DirectionsRenderer;
     var map = new google.maps.Map(document.getElementById('map'), {
       zoom: 19,
       center: {lat: 39.749635, lng: -105.000106},
       mapTypeId: 'satellite',
       disableDoubleClickZoom: true
    });
    map.setTilt(0);
    window.directionsDisplay.setMap(map);
    map.addListener('dblclick', function(event) {
      placeMarker(event.latLng, map, directionsService, directionsDisplay);
      addMarkerToChat(event);
    });
    setCurrentLocation(map);
   }

   function placeMarker(location, map, directionsService, directionsDisplay) {
     var marker = new google.maps.Marker({
         position: location,
         map: map,
         draggable: true
     });

     marker.addListener('dblclick', function(event){
       var msg = currentUser + " removed a point";
       marker.setMap(null);
       socket.emit('send message', msg);
       console.log("Message sent to server: " + msg);
     });
   }

   function setNewIds(){
     var id = $('.location-li').length;
     $('.route-button').last().attr('id', 'route-button-' + id);
   }

   function setCurrentLocation(map){
     if(navigator.geolocation){
       navigator.geolocation.getCurrentPosition(function(position){
         window.currentPosition = {
           lat: position.coords.latitude,
           lng: position.coords.longitude
         };
         placeMarker(window.currentPosition, map);
       });
     }
   }

   function addMarkerToChat(marker){
     var lat = marker.latLng.lat();
     var lng = marker.latLng.lng();
     var msg = currentUser + " placed a point at: " + lat.toFixed(3) + ", " + lng.toFixed(3);

     socket.emit('send location', [lat, lng]);
     console.log("Message sent to server: " + [lat, lng]);
   }

   function calculateAndDisplayRoute(directionsService, directionsDisplay, waypts) {
      directionsService.route({
        origin: waypts[0].location,
        destination: waypts[1].location,
        waypoints: waypts,
        optimizeWaypoints: true,
        travelMode: 'WALKING'
      }, function(response, status) {
        if (status === 'OK') {
          directionsDisplay.setDirections(response);
          var route = response.routes[0];

          // $('#messages').append($("<li class='location-li'>").text(line));

          var summaryPanel = $('#messages');
          summaryPanel.innerHTML = '';
          // For each route, display summary information.
          for (var i = 0; i < route.legs.length; i++) {
            var routeSegment = i + 1;
            summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +
                '</b><br>';
            summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
            summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
            summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
          }
        } else {
          window.alert('Directions request failed due to ' + status);
        }
      });
    }
</script>

<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDJ8vVzSRhHu5mv0Dv5u8N7qJYNS-HOQ6Y&callback=initMap">
</script>
